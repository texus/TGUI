/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// TGUI - Texus' Graphical User Interface
// Copyright (C) 2012-2022 Bruno Van de Velde (vdv_b@tgui.eu)
//
// This software is provided 'as-is', without any express or implied warranty.
// In no event will the authors be held liable for any damages arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it freely,
// subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented;
//    you must not claim that you wrote the original software.
//    If you use this software in a product, an acknowledgment
//    in the product documentation would be appreciated but is not required.
//
// 2. Altered source versions must be plainly marked as such,
//    and must not be misrepresented as being the original software.
//
// 3. This notice may not be removed or altered from any source distribution.
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#ifndef TGUI_TAB_ALIGNMENT_HPP
#define TGUI_TAB_ALIGNMENT_HPP

#include <TGUI/String.hpp>
#include <string>

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace tgui
{
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// @brief Enumeration of the tab alignments
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    enum TabAlign
    {
        Top              = 0,      //!< Tabs use the complete width and are above panes
        TopFixedWidth    = 1 << 0, //!< Tabs use fixed width multiplied with tab count and are above panes
        Bottom           = 1 << 1, //!< Tabs use the complete width and are below panes
        BottomFixedWidth = 1 << 2, //!< Tabs use fixed width multiplied with tab count and are below panes
    };


    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /// @brief Wrapper for tab alignment
    ///
    /// Implicit converter for parameters. A function taking a TabAlignment as parameter can be given either a
    /// tgui::TabAlign or a string representation as argument.
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    class TGUI_API TabAlignment
    {
    public:

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// @brief Creates the object with default tab alignment (tgui::TabAlign::Top)
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        TGUI_CONSTEXPR TabAlignment() :
            m_tabAlign(tgui::TabAlign::Top)
        {
        }


        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// @brief Creates the object from one tgui::TabAlign::Alignment enum members
        ///
        /// @param align  Tab alignment to set
        ///
        /// @code
        /// TabAlignment align, one value of tgui::TabAlign;
        /// @endcode
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        TGUI_CONSTEXPR TabAlignment(unsigned int align) :
            m_tabAlign(align)
        {
        }


        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// @brief Creates the object from a string representing of the tab alignment
        ///
        /// @param string  String to be deserialized as tab alignment
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        TabAlignment(const String& string);


        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// @brief Creates the object from a string representing of the tab alignment
        ///
        /// @param string  String to be deserialized as tab alignment
        ///
        /// @code
        /// TabAlignment align{"Bottom"};
        /// @endcode
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        TabAlignment(const char* string);


        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// @brief Converts this object into an unsigned int
        ///
        /// @return The tab alignment stored in this object
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        TGUI_CONSTEXPR operator unsigned int() const
        {
            return m_tabAlign;
        }


        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private:

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// @brief Stores the tab alignment represented by this object
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        unsigned int m_tabAlign;
    };

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // TGUI_TAB_ALIGNMENT_HPP
